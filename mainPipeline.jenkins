pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION = 'eu-central-1'
        S3_BUCKET_NAME = 'sample-software-app-bucket'
        EC2_INSTANCE_ID = 'i-1234567890abcdef'
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
        ANSIBLE_PLAYBOOK = 'deploy.yml'
        ANSIBLE_INVENTORY = 'hosts.ini'
    }
    stages {
        stage('Build') {
            steps {
                git 'https://github.com/Bill-EPAM-DevOpsLab2022-FinalProject/sample.software'
                sh 'npm install'
                sh 'ng build --prod'
                sh 'docker-compose build'
                sh 'docker-compose push'
            }
        }
        stage('Unit Test') {
            steps {
                sh 'ng test'
            }
        }
        stage('Integration Test') {
            steps {
                sh 'ng e2e'
            }
        }
        stage('Deploy to EC2 using Ansible') {
            steps {
                withAWS(region: AWS_DEFAULT_REGION, credentials: 'aws-credentials') {
                    s3Upload(pathStyleAccessEnabled: true, file: 'docker-compose.yml', bucket: S3_BUCKET_NAME, workingDir: '.')
                }
                ansiblePlaybook(playbook: ANSIBLE_PLAYBOOK, inventory: ANSIBLE_INVENTORY, extras: "-e s3_bucket_name=${S3_BUCKET_NAME} -e ec2_instance_id=${EC2_INSTANCE_ID} -e docker_compose_file=${DOCKER_COMPOSE_FILE}")
            }
        }
        stage('Build Dev Environment') {
            when {
                buildingTag()
            }
            steps {
                sh 'docker-compose -f docker-compose.dev.yml build'
            }
        }
    }
}
